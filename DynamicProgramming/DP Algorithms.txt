Fibonacci:
1. Start
2. Receive the Parameter Number
3. Check if Number<=0, then return Can't generate fibonacci
4. Otherwise, Initialize mySeries=[0,1]
5. Initialize count = 2
6. mySeries.append with mySeries[count-1]+mySeries[count-2]
7. Repeat step 6 until count==Number
8. Return mySeries
9. Stop


3>> disks, 

1,2,3
Django    Jinja     Flask
   s        m         e

  2,3                 1

   3        2         1
   3        2,1         
            2,1       3
    1       2         3
    1                 3,2
                      1,2,3


Climb the stairs:

stairs=2

possibilities count=2
1. climb 1 stair at a time
2. climb 2 stairs at a time

stairs=3

possibilities count=3
1. climb 1 stair at a time
2. climb 2 stairs at a time and 1 stair following
3. 1 stair followed by climb 2 stairs at a time



Knapsack of Fruits:
Apple, Banana, Orange, Water melon              >> products
  2     1       3       4                       >> weights
  4     3       5       7                       >> cost

        5                                       >> Knapsack weight

        Apple, Orange (5)>>                     9
        Apple, Banana (3)>>                     7
        Orange, Banana (4)>                     8
        Banana, Water melon(5)                  10


 0  1  2  3  4
[7, 5, 1, 6, 8]

0-day1
4-day5

day1-day2 >> loss of 2
day2-day3 >> loss of 4
day3-day4 >> profit of 5
day3-day5 >> profit of 7

 0  1  2  3  4
[90,45,20,10,2]
day1-day2 >> loss of 45
day2-day3 >> loss of 25
day3-day4 >> loss of 10
day4-day5 >> loss of  8


para1="kitten">> 6
para2="sitting"> 7

no of steps/ distance:
1. insert new character
2. delete existing character
3. modify/ replace existing character with new one

output: 3
para1="sitting"
para2="sitting"

horse, ros
ros, ros
output 3

Sum of equal partition:
[1,2,3,4]     >> 10%2>> 0
        10/2>> 5

[1,4] [2,3]
  5  =  5
  True

[2,3,4,6] >> 15%2 >> 1>> false
[2,4] [3,6]
  6 !=  9
[2,3] [4,6]
  5 != 10
[2,3,4] [6]
   9 != 6

False

Coin change problem:
 coins      expected
[1,2,5]   >> 11

2+2+2+2+2+1 >> 11   >> 6
1+1+1+1+1+1+1+1+1+1+1 >> 11
5+5+1 >> 11 >> 3

3

[2]   >> 3
-1

sys.maxsize

'inf'
float
columns>> expected+1>> 12
[inf,inf,inf,inf,inf,inf,inf,inf,inf,inf,inf,inf]

base value
[0,inf,inf,inf,inf,inf,inf,inf,inf,inf,inf,inf]